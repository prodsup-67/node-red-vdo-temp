[
    {
        "id": "0bda928f5870fe31",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "64ee36542fa458ea",
        "type": "tab",
        "label": "DB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c9db46d895e9f452",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d12b6ff857662b95",
        "type": "tab",
        "label": "ML",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "236bb63f8166146c",
        "type": "tab",
        "label": "MQTT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c87b5ca7fe85273f",
        "type": "tab",
        "label": "Test Context",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5d2efabbb070416a",
        "type": "tab",
        "label": "Context",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "339ba613130686b9",
        "type": "tab",
        "label": "Counter",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f9b45d552e43d415",
        "type": "tab",
        "label": "Turn on/off",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "716d722657cad949",
        "type": "tab",
        "label": "ETC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e42c2f568adff1e6",
        "type": "tab",
        "label": "IoT Sensor",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "56db586c2f5513cc",
        "type": "tab",
        "label": "Object Detection",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c9b7fc0892db3842",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "44dd633ed7a28d3f",
        "type": "tab",
        "label": "Exam",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e2f563ce6f549df7",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c712bb54ba961aa4",
        "type": "group",
        "z": "56db586c2f5513cc",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "1dbe5bc19a6cfe30",
            "629194a0d2aaae6b",
            "950492b94a28dd02",
            "15a807c9c75d7d33",
            "b99be2b53fa0744d",
            "c4acf83621d09278",
            "d0829788800d9db0",
            "dd691b8c1cf7b926",
            "63c83c85f53e59e9",
            "c1aebcd98785edc3",
            "926cdca585d0eef0"
        ],
        "x": 54,
        "y": 59,
        "w": 992,
        "h": 402
    },
    {
        "id": "0d89bdc714438385",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "6cded3d584342e31",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ee7c47da5878f0a2",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "6cded3d584342e31",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6217fa607d98f662",
        "type": "ui_tab",
        "name": "Control",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c538bc9a9fae688f",
        "type": "ui_group",
        "name": "Button",
        "tab": "6217fa607d98f662",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9390f05ccaf6c03d",
        "type": "mqtt-broker",
        "name": "",
        "broker": "1.tcp.ap.ngrok.io",
        "port": "25580",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "7bb9ee1340704833",
        "type": "firebase admin",
        "name": "Database"
    },
    {
        "id": "cd21216dcf1b107a",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "6cded3d584342e31",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "4a05d9677cfeadd8",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "1.tcp.ap.ngrok.io",
        "port": "25580",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "986b2765be7f6419",
        "type": "ui_tab",
        "name": "Tab 3",
        "icon": "dashboard",
        "order": 3
    },
    {
        "id": "484ef1fdaf6546a0",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "986b2765be7f6419",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "f7ddb504d43882b5",
        "type": "ui_tab",
        "name": "Tab 4",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "844441360979d51a",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "f7ddb504d43882b5",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "50f4de0bd1a0c2ac",
        "type": "ui_tab",
        "name": "Tab 5",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "ce39bb5482ac13ae",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "50f4de0bd1a0c2ac",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "a6d174fbd907bce2",
        "type": "inject",
        "z": "0bda928f5870fe31",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 280,
        "wires": [
            [
                "c09605badf9e9e97"
            ]
        ]
    },
    {
        "id": "c09605badf9e9e97",
        "type": "function",
        "z": "0bda928f5870fe31",
        "name": "function 1",
        "func": "const timestamp = msg.payload;\nconst period = 10;\nmsg.payload = Math.sin(((timestamp / 1000) * 2 * Math.PI) / period);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 280,
        "wires": [
            [
                "f413f92f42eddb40",
                "5e848e0ebf4f02dd"
            ]
        ]
    },
    {
        "id": "f413f92f42eddb40",
        "type": "ui_chart",
        "z": "0bda928f5870fe31",
        "d": true,
        "name": "",
        "group": "ee7c47da5878f0a2",
        "order": 0,
        "width": "0",
        "height": "0",
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "",
        "dot": false,
        "ymin": "-2",
        "ymax": "10",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#a4ba36",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 630,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "5e848e0ebf4f02dd",
        "type": "ui_gauge",
        "z": "0bda928f5870fe31",
        "d": true,
        "name": "",
        "group": "ee7c47da5878f0a2",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": "-1",
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 630,
        "y": 380,
        "wires": []
    },
    {
        "id": "a3af0880e16ccaf5",
        "type": "comment",
        "z": "0bda928f5870fe31",
        "name": "Display",
        "info": "",
        "x": 190,
        "y": 220,
        "wires": []
    },
    {
        "id": "0f41ac58ce0607b0",
        "type": "comment",
        "z": "0bda928f5870fe31",
        "name": "Control",
        "info": "",
        "x": 170,
        "y": 480,
        "wires": []
    },
    {
        "id": "67ee0443c261fdc8",
        "type": "ui_button",
        "z": "0bda928f5870fe31",
        "name": "",
        "group": "c538bc9a9fae688f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "#16e77e",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "f91b40eee6cc840e"
            ]
        ]
    },
    {
        "id": "b4c57bdedcedef46",
        "type": "ui_button",
        "z": "0bda928f5870fe31",
        "name": "",
        "group": "c538bc9a9fae688f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 600,
        "wires": [
            [
                "f91b40eee6cc840e"
            ]
        ]
    },
    {
        "id": "f91b40eee6cc840e",
        "type": "mqtt out",
        "z": "0bda928f5870fe31",
        "d": true,
        "name": "",
        "topic": "test/dashboard",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9390f05ccaf6c03d",
        "x": 460,
        "y": 560,
        "wires": []
    },
    {
        "id": "3d6c551f7424acee",
        "type": "mqtt in",
        "z": "0bda928f5870fe31",
        "d": true,
        "name": "",
        "topic": "test/dashboard",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9390f05ccaf6c03d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 740,
        "wires": [
            [
                "cc6874f4d0ec30e2"
            ]
        ]
    },
    {
        "id": "cc6874f4d0ec30e2",
        "type": "template",
        "z": "0bda928f5870fe31",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "The system is set to {{payload}} !",
        "output": "str",
        "x": 460,
        "y": 740,
        "wires": [
            [
                "356cea66957517fa"
            ]
        ]
    },
    {
        "id": "356cea66957517fa",
        "type": "ui_text",
        "z": "0bda928f5870fe31",
        "group": "c538bc9a9fae688f",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 630,
        "y": 740,
        "wires": []
    },
    {
        "id": "bf551791e18026b5",
        "type": "function",
        "z": "64ee36542fa458ea",
        "name": "function 2",
        "func": "const timestamp = new Date().getTime();\nconst value = msg.payload;\nmsg.payload = {\n  value: value,\n  timestamp: timestamp,\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 160,
        "wires": [
            [
                "6bf6380cf7af5307"
            ]
        ]
    },
    {
        "id": "6bf6380cf7af5307",
        "type": "Firestore out",
        "z": "64ee36542fa458ea",
        "d": true,
        "name": "",
        "collection": "data",
        "document": "",
        "operation": "add",
        "admin": "7bb9ee1340704833",
        "eject": false,
        "x": 680,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "bc3fc0ee02db3c8d",
        "type": "inject",
        "z": "64ee36542fa458ea",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "num",
        "x": 270,
        "y": 160,
        "wires": [
            [
                "bf551791e18026b5"
            ]
        ]
    },
    {
        "id": "e2b169f0b138d5a7",
        "type": "comment",
        "z": "64ee36542fa458ea",
        "name": "Write to DB",
        "info": "",
        "x": 270,
        "y": 100,
        "wires": []
    },
    {
        "id": "66365a751648fd38",
        "type": "comment",
        "z": "64ee36542fa458ea",
        "name": "Read from DB",
        "info": "",
        "x": 270,
        "y": 240,
        "wires": []
    },
    {
        "id": "3e6ab40be0fedd68",
        "type": "Firestore in",
        "z": "64ee36542fa458ea",
        "d": true,
        "name": "",
        "collection": "data",
        "group": false,
        "document": "",
        "realtime": true,
        "query": [
            {
                "orderBy": {
                    "field": "timestamp",
                    "direction": "desc"
                }
            },
            {
                "limit": 10
            }
        ],
        "admin": "7bb9ee1340704833",
        "snapHandler": "",
        "eject": false,
        "x": 250,
        "y": 320,
        "wires": [
            [
                "f45c9c30d48a1dd2"
            ]
        ]
    },
    {
        "id": "ead9a5a670b999bd",
        "type": "debug",
        "z": "64ee36542fa458ea",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 320,
        "wires": []
    },
    {
        "id": "f45c9c30d48a1dd2",
        "type": "function",
        "z": "64ee36542fa458ea",
        "name": "function 3",
        "func": "let payload = msg.payload;\nlet textOut = \"\";\n\nfor (const [key, value] of Object.entries(payload)) {\n  const _date = value?.timestamp ? new Date(value.timestamp) : new Date();\n  let reading = value.value;\n  if (parseFloat(value.value)) {\n    reading = parseFloat(value.value).toFixed(2);\n  }\n  const datestring = _date.toLocaleDateString();\n  const timestring = _date.toLocaleTimeString();\n  textOut += `📆${datestring} ⏰${timestring} ✏${reading}<br/>`;\n}\n\nmsg.payload = textOut;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 320,
        "wires": [
            [
                "ead9a5a670b999bd",
                "a841c8e27be13dfd"
            ]
        ]
    },
    {
        "id": "a841c8e27be13dfd",
        "type": "ui_text",
        "z": "64ee36542fa458ea",
        "d": true,
        "group": "ee7c47da5878f0a2",
        "order": 2,
        "width": "6",
        "height": "7",
        "name": "",
        "label": "Data from Database",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Courier,monospace",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 400,
        "wires": []
    },
    {
        "id": "b3f862bba84eff0b",
        "type": "inject",
        "z": "c9db46d895e9f452",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "0c0b8eef7ecf68fe",
                "4b8ac092368134bf"
            ]
        ]
    },
    {
        "id": "0c0b8eef7ecf68fe",
        "type": "function",
        "z": "c9db46d895e9f452",
        "d": true,
        "name": "Random Values",
        "func": "// Change here\nconst min_value = 0;\nconst max_value = 100;\n// Don't change below\nconst value = Math.random() * (max_value - min_value) + min_value;\nconst value_rounded = Math.round(value * 100) / 100;\nmsg.payload = value_rounded;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 120,
        "wires": [
            [
                "adf64bce371d2da8"
            ]
        ]
    },
    {
        "id": "adf64bce371d2da8",
        "type": "mqtt out",
        "z": "c9db46d895e9f452",
        "d": true,
        "name": "",
        "topic": "test/fakesensor",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9390f05ccaf6c03d",
        "x": 740,
        "y": 120,
        "wires": []
    },
    {
        "id": "04b02fa18124783e",
        "type": "comment",
        "z": "c9db46d895e9f452",
        "name": "Prototype Sensor",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "51a8b9db54ca629c",
        "type": "mqtt in",
        "z": "c9db46d895e9f452",
        "d": true,
        "name": "",
        "topic": "test/fakesensor",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9390f05ccaf6c03d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 300,
        "wires": [
            [
                "9275bd1c859a18d4",
                "08c114a0dc9ac6f0"
            ]
        ]
    },
    {
        "id": "9275bd1c859a18d4",
        "type": "debug",
        "z": "c9db46d895e9f452",
        "d": true,
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 300,
        "wires": []
    },
    {
        "id": "08c114a0dc9ac6f0",
        "type": "ui_chart",
        "z": "c9db46d895e9f452",
        "d": true,
        "name": "",
        "group": "cd21216dcf1b107a",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 370,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "4b8ac092368134bf",
        "type": "function",
        "z": "c9db46d895e9f452",
        "name": "function 4",
        "func": "const timestamp = msg.payload;\nconst period = 10;\nmsg.payload = Math.sin(((timestamp / 1000) * 2 * Math.PI) / period);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 200,
        "wires": [
            [
                "adf64bce371d2da8"
            ]
        ]
    },
    {
        "id": "1e5c487d9d8d642f",
        "type": "inject",
        "z": "d12b6ff857662b95",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "img/dog.jpg",
        "payloadType": "str",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "4051e142c181d5b3"
            ]
        ]
    },
    {
        "id": "4051e142c181d5b3",
        "type": "jimp-image",
        "z": "d12b6ff857662b95",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 390,
        "y": 140,
        "wires": [
            [
                "695eb4c9f0a9f8c6",
                "ae5c7d511cb3da96"
            ]
        ]
    },
    {
        "id": "695eb4c9f0a9f8c6",
        "type": "image viewer",
        "z": "d12b6ff857662b95",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 610,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "1a129a0dfb133055",
        "type": "inject",
        "z": "d12b6ff857662b95",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "img/house.jpg",
        "payloadType": "str",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "4051e142c181d5b3"
            ]
        ]
    },
    {
        "id": "ae5c7d511cb3da96",
        "type": "change",
        "z": "d12b6ff857662b95",
        "name": "Set Width",
        "rules": [
            {
                "t": "set",
                "p": "width",
                "pt": "msg",
                "to": "300",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "height",
                "pt": "msg",
                "to": "-1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 280,
        "wires": [
            [
                "9235e736ea5f7138"
            ]
        ]
    },
    {
        "id": "9235e736ea5f7138",
        "type": "jimp-image",
        "z": "d12b6ff857662b95",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "buf",
        "parameter1": "width",
        "parameter1Type": "msg",
        "parameter2": "height",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 3,
        "jimpFunction": "resize",
        "selectedJimpFunction": {
            "name": "resize",
            "fn": "resize",
            "description": "resize the image. One of the w or h parameters can be set to automatic (\"Jimp.AUTO\" or -1).",
            "parameters": [
                {
                    "name": "w",
                    "type": "num|auto",
                    "required": true,
                    "hint": "the width to resize the image to (or \"Jimp.AUTO\" or -1)"
                },
                {
                    "name": "h",
                    "type": "num|auto",
                    "required": true,
                    "hint": "the height to resize the image to (or \"Jimp.AUTO\" or -1)"
                },
                {
                    "name": "mode",
                    "type": "resizeMode",
                    "required": false,
                    "hint": "a scaling method (e.g. Jimp.RESIZE_BEZIER)"
                }
            ]
        },
        "x": 770,
        "y": 280,
        "wires": [
            [
                "47cc5d8f5396a4fd"
            ]
        ]
    },
    {
        "id": "b0b56a3a42d3d6e7",
        "type": "comment",
        "z": "d12b6ff857662b95",
        "name": "Input",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "d1716f1bbe0445c7",
        "type": "comment",
        "z": "d12b6ff857662b95",
        "name": "Process",
        "info": "",
        "x": 140,
        "y": 560,
        "wires": []
    },
    {
        "id": "47cc5d8f5396a4fd",
        "type": "function",
        "z": "d12b6ff857662b95",
        "name": "Prepare Img Payload",
        "func": "msg.payload = { imageEncoded: Buffer.from(msg.payload).toString(\"base64\") };\nmsg.headers = { \"Content-Type\": \"application/x-www-form-urlencoded\" };\nmsg.url = \"http://localhost:3003/upload_base64\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 640,
        "wires": [
            [
                "b0e2b11be060c91f"
            ]
        ]
    },
    {
        "id": "b0e2b11be060c91f",
        "type": "http request",
        "z": "d12b6ff857662b95",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 430,
        "y": 640,
        "wires": [
            [
                "4517a951ce7dacf9",
                "dacecc2b9a2025fa"
            ]
        ]
    },
    {
        "id": "2c2eeb011de46450",
        "type": "debug",
        "z": "d12b6ff857662b95",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 640,
        "wires": []
    },
    {
        "id": "4517a951ce7dacf9",
        "type": "function",
        "z": "d12b6ff857662b95",
        "name": "Extract First Class",
        "func": "const obj = JSON.parse(msg.payload);\nmsg.payload = obj.predictions[0].class;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 640,
        "wires": [
            [
                "2c2eeb011de46450"
            ]
        ]
    },
    {
        "id": "dacecc2b9a2025fa",
        "type": "function",
        "z": "d12b6ff857662b95",
        "name": "Format Text",
        "func": "const obj = JSON.parse(msg.payload);\nlet textOut = \"\";\nfor (const pred of obj.predictions) {\n    const classStr = pred.class;\n    const score = pred.score;\n    const scoreP = (score * 100).toFixed(1);\n    textOut += `👉${classStr} (${scoreP}%) <br/>`;\n}\nconst dt = new Date();\nconst datestring = dt.toLocaleDateString();\nconst timestring = dt.toLocaleTimeString();\ntextOut += `<br/>📆${datestring} ⏰${timestring}`;\nmsg.payload = textOut;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 720,
        "wires": [
            [
                "e8bd9a0de8e17739"
            ]
        ]
    },
    {
        "id": "e8bd9a0de8e17739",
        "type": "ui_text",
        "z": "d12b6ff857662b95",
        "group": "cd21216dcf1b107a",
        "order": 3,
        "width": "6",
        "height": "7",
        "name": "",
        "label": "Prediction",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 860,
        "y": 720,
        "wires": []
    },
    {
        "id": "b64d91982741cfa1",
        "type": "ui_button",
        "z": "d12b6ff857662b95",
        "name": "",
        "group": "cd21216dcf1b107a",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Capture",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "26683e3adb0eecf3"
            ]
        ]
    },
    {
        "id": "26683e3adb0eecf3",
        "type": "change",
        "z": "d12b6ff857662b95",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "capture",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 360,
        "wires": [
            [
                "124dfc23a21e2aca"
            ]
        ]
    },
    {
        "id": "124dfc23a21e2aca",
        "type": "ui_webcam",
        "z": "d12b6ff857662b95",
        "name": "",
        "group": "cd21216dcf1b107a",
        "order": 1,
        "width": 0,
        "height": 5,
        "countdown": false,
        "autoStart": false,
        "hideCaptureButton": false,
        "showImage": "2",
        "mirror": true,
        "format": "png",
        "x": 540,
        "y": 360,
        "wires": [
            [
                "ae5c7d511cb3da96"
            ]
        ]
    },
    {
        "id": "26723656def17c7f",
        "type": "inject",
        "z": "d12b6ff857662b95",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 420,
        "wires": [
            [
                "26683e3adb0eecf3"
            ]
        ]
    },
    {
        "id": "59469e9eeb54d109",
        "type": "mqtt in",
        "z": "236bb63f8166146c",
        "d": true,
        "name": "",
        "topic": "test/main",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4a05d9677cfeadd8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 120,
        "wires": [
            [
                "513a5a00a265f82a"
            ]
        ]
    },
    {
        "id": "513a5a00a265f82a",
        "type": "debug",
        "z": "236bb63f8166146c",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 120,
        "wires": []
    },
    {
        "id": "3b58b44512bcc4ef",
        "type": "mqtt out",
        "z": "236bb63f8166146c",
        "d": true,
        "name": "",
        "topic": "test/main",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4a05d9677cfeadd8",
        "x": 500,
        "y": 260,
        "wires": []
    },
    {
        "id": "e92b192c77f8eec2",
        "type": "inject",
        "z": "236bb63f8166146c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Hi from node-red",
        "payloadType": "str",
        "x": 260,
        "y": 260,
        "wires": [
            [
                "3b58b44512bcc4ef"
            ]
        ]
    },
    {
        "id": "d2726aea3cce7879",
        "type": "inject",
        "z": "c87b5ca7fe85273f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 160,
        "wires": [
            [
                "4a1777f584e85e38"
            ]
        ]
    },
    {
        "id": "4a1777f584e85e38",
        "type": "function",
        "z": "c87b5ca7fe85273f",
        "name": "function 5",
        "func": "const value = flow.get(\"value\") ?? 1;\nmsg.payload = value;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 160,
        "wires": [
            [
                "e15e2c7e1eedfaf3"
            ]
        ]
    },
    {
        "id": "e15e2c7e1eedfaf3",
        "type": "debug",
        "z": "c87b5ca7fe85273f",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 160,
        "wires": []
    },
    {
        "id": "924fe1f1ab6e6a94",
        "type": "inject",
        "z": "5d2efabbb070416a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 180,
        "wires": [
            [
                "bda9fc659ba31539"
            ]
        ]
    },
    {
        "id": "4d2f591e85bca0b3",
        "type": "change",
        "z": "5d2efabbb070416a",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "value",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "bda9fc659ba31539",
        "type": "function",
        "z": "5d2efabbb070416a",
        "name": "Gen Random Number",
        "func": "msg.payload = Math.random();\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 180,
        "wires": [
            [
                "4d2f591e85bca0b3",
                "68e898ef54a9e7af",
                "f463c47a2adc30f5"
            ]
        ]
    },
    {
        "id": "d2415a20deb272c4",
        "type": "inject",
        "z": "5d2efabbb070416a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 340,
        "wires": [
            [
                "cedbd23f8c5e2ec5"
            ]
        ]
    },
    {
        "id": "8bf560e1a549da3a",
        "type": "ui_text",
        "z": "5d2efabbb070416a",
        "d": true,
        "group": "484ef1fdaf6546a0",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Context Value",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 640,
        "y": 340,
        "wires": []
    },
    {
        "id": "68e898ef54a9e7af",
        "type": "mqtt out",
        "z": "5d2efabbb070416a",
        "d": true,
        "name": "",
        "topic": "test/value",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4a05d9677cfeadd8",
        "x": 700,
        "y": 120,
        "wires": []
    },
    {
        "id": "35222329af216401",
        "type": "mqtt in",
        "z": "5d2efabbb070416a",
        "d": true,
        "name": "",
        "topic": "test/value",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4a05d9677cfeadd8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 260,
        "wires": [
            [
                "8bf560e1a549da3a"
            ]
        ]
    },
    {
        "id": "f463c47a2adc30f5",
        "type": "function",
        "z": "5d2efabbb070416a",
        "name": "Set Flow",
        "func": "flow.set(\"value\", msg.payload);\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "cedbd23f8c5e2ec5",
        "type": "function",
        "z": "5d2efabbb070416a",
        "name": "function 6",
        "func": "const value = flow.get(\"value\") ?? 0;\nmsg.payload = value;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 340,
        "wires": [
            [
                "8bf560e1a549da3a"
            ]
        ]
    },
    {
        "id": "43726a6c062d6078",
        "type": "inject",
        "z": "339ba613130686b9",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "ca8263512d7bda94"
            ]
        ]
    },
    {
        "id": "ca8263512d7bda94",
        "type": "function",
        "z": "339ba613130686b9",
        "name": "Gen Random Number",
        "func": "msg.payload = Math.random();\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 140,
        "wires": [
            [
                "8c87d0eae8be3f1f",
                "084c872ddcac3aa7"
            ]
        ]
    },
    {
        "id": "8c87d0eae8be3f1f",
        "type": "ui_gauge",
        "z": "339ba613130686b9",
        "d": true,
        "name": "",
        "group": "484ef1fdaf6546a0",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 510,
        "y": 100,
        "wires": []
    },
    {
        "id": "084c872ddcac3aa7",
        "type": "switch",
        "z": "339ba613130686b9",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0.5",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 200,
        "wires": [
            [
                "22e9f924422ea263"
            ]
        ]
    },
    {
        "id": "22e9f924422ea263",
        "type": "function",
        "z": "339ba613130686b9",
        "name": "function 7",
        "func": "const curCounter = flow.get(\"counter\") ?? 0;\nflow.set(\"counter\", curCounter + 1);\nmsg.payload = curCounter + 1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 200,
        "wires": [
            [
                "f25e390948eb3f0d"
            ]
        ]
    },
    {
        "id": "f25e390948eb3f0d",
        "type": "ui_text",
        "z": "339ba613130686b9",
        "d": true,
        "group": "484ef1fdaf6546a0",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Counter",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#aa278e",
        "x": 800,
        "y": 200,
        "wires": []
    },
    {
        "id": "de5396897077856f",
        "type": "ui_button",
        "z": "339ba613130686b9",
        "d": true,
        "name": "",
        "group": "484ef1fdaf6546a0",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset Counter",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 220,
        "y": 320,
        "wires": [
            [
                "b0d547a817cb666e"
            ]
        ]
    },
    {
        "id": "b0d547a817cb666e",
        "type": "change",
        "z": "339ba613130686b9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "counter",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 320,
        "wires": [
            [
                "f25e390948eb3f0d"
            ]
        ]
    },
    {
        "id": "da6f10d7b72f6710",
        "type": "inject",
        "z": "f9b45d552e43d415",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "48cc903bd2d1b185"
            ]
        ]
    },
    {
        "id": "48cc903bd2d1b185",
        "type": "function",
        "z": "f9b45d552e43d415",
        "name": "Gen Value",
        "func": "msg.payload = Math.random();\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 120,
        "wires": [
            [
                "631b7e641262afb9"
            ]
        ]
    },
    {
        "id": "9b2976187274cfe9",
        "type": "ui_gauge",
        "z": "f9b45d552e43d415",
        "name": "",
        "group": "484ef1fdaf6546a0",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 690,
        "y": 120,
        "wires": []
    },
    {
        "id": "e9c9ea9de20828d4",
        "type": "ui_button",
        "z": "f9b45d552e43d415",
        "name": "",
        "group": "484ef1fdaf6546a0",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "On",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "ON",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 280,
        "wires": [
            [
                "52067b287d46db3c"
            ]
        ]
    },
    {
        "id": "5badb8cc14207340",
        "type": "ui_button",
        "z": "f9b45d552e43d415",
        "name": "",
        "group": "484ef1fdaf6546a0",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Off",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "OFF",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "52067b287d46db3c",
                "1155e00d3a4d0847"
            ]
        ]
    },
    {
        "id": "52067b287d46db3c",
        "type": "change",
        "z": "f9b45d552e43d415",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "status",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "631b7e641262afb9",
        "type": "function",
        "z": "f9b45d552e43d415",
        "name": "Turn On/Off",
        "func": "const status = flow.get(\"status\") ?? \"OFF\";\nif (status === \"ON\") {\n  return msg;\n} else {\n  // Do nothing\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 120,
        "wires": [
            [
                "9b2976187274cfe9"
            ]
        ]
    },
    {
        "id": "1155e00d3a4d0847",
        "type": "change",
        "z": "f9b45d552e43d415",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 380,
        "wires": [
            [
                "9b2976187274cfe9"
            ]
        ]
    },
    {
        "id": "046b7ce0efd953ae",
        "type": "inject",
        "z": "716d722657cad949",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 80,
        "wires": [
            [
                "38118de6a01223d6"
            ]
        ]
    },
    {
        "id": "38118de6a01223d6",
        "type": "function",
        "z": "716d722657cad949",
        "name": "Gen Random",
        "func": "msg.payload = Math.random()\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 200,
        "wires": [
            [
                "90801a77b08907a2"
            ]
        ]
    },
    {
        "id": "0fa8ae31430d6a8a",
        "type": "debug",
        "z": "716d722657cad949",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 320,
        "wires": []
    },
    {
        "id": "90801a77b08907a2",
        "type": "switch",
        "z": "716d722657cad949",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0.8",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 200,
        "wires": [
            [
                "c86e5895589f691e"
            ],
            [
                "3198dfe787609221"
            ]
        ]
    },
    {
        "id": "c86e5895589f691e",
        "type": "change",
        "z": "716d722657cad949",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "High",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 160,
        "wires": [
            [
                "b05d26e9713a211a"
            ]
        ]
    },
    {
        "id": "3198dfe787609221",
        "type": "change",
        "z": "716d722657cad949",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Low",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 240,
        "wires": [
            [
                "b05d26e9713a211a"
            ]
        ]
    },
    {
        "id": "b05d26e9713a211a",
        "type": "template",
        "z": "716d722657cad949",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Sending message: {{payload}} !",
        "output": "str",
        "x": 540,
        "y": 380,
        "wires": [
            [
                "d6a2d2f7d3999d7e"
            ]
        ]
    },
    {
        "id": "d6a2d2f7d3999d7e",
        "type": "rbe",
        "z": "716d722657cad949",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 770,
        "y": 360,
        "wires": [
            [
                "0fa8ae31430d6a8a"
            ]
        ]
    },
    {
        "id": "6e4ead5ffb335cac",
        "type": "inject",
        "z": "716d722657cad949",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 600,
        "wires": [
            [
                "0652ccb2d604111c"
            ]
        ]
    },
    {
        "id": "0652ccb2d604111c",
        "type": "delay",
        "z": "716d722657cad949",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 600,
        "wires": [
            [
                "07e1ec42457f21a1",
                "942cc063819ba4c4"
            ]
        ]
    },
    {
        "id": "07e1ec42457f21a1",
        "type": "debug",
        "z": "716d722657cad949",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 600,
        "wires": []
    },
    {
        "id": "51bb073aa802910b",
        "type": "complete",
        "z": "716d722657cad949",
        "d": true,
        "name": "",
        "scope": [
            "0652ccb2d604111c"
        ],
        "uncaught": false,
        "x": 230,
        "y": 800,
        "wires": [
            [
                "942cc063819ba4c4"
            ]
        ]
    },
    {
        "id": "942cc063819ba4c4",
        "type": "change",
        "z": "716d722657cad949",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Complete Trigger",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 760,
        "wires": [
            [
                "07e1ec42457f21a1"
            ]
        ]
    },
    {
        "id": "6fd33a8b6fcd0059",
        "type": "mqtt in",
        "z": "e42c2f568adff1e6",
        "d": true,
        "name": "",
        "topic": "testESP/Temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4a05d9677cfeadd8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 140,
        "wires": [
            [
                "0df750bf65c5ed3e",
                "6fa599a961524020"
            ]
        ]
    },
    {
        "id": "4c6217b96b970130",
        "type": "mqtt in",
        "z": "e42c2f568adff1e6",
        "d": true,
        "name": "",
        "topic": "testESP/Humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4a05d9677cfeadd8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 340,
        "y": 240,
        "wires": [
            [
                "0df750bf65c5ed3e",
                "a8f836fecdcbd3b1"
            ]
        ]
    },
    {
        "id": "0df750bf65c5ed3e",
        "type": "debug",
        "z": "e42c2f568adff1e6",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 180,
        "wires": []
    },
    {
        "id": "6fa599a961524020",
        "type": "ui_chart",
        "z": "e42c2f568adff1e6",
        "name": "",
        "group": "844441360979d51a",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "a8f836fecdcbd3b1",
        "type": "ui_gauge",
        "z": "e42c2f568adff1e6",
        "name": "",
        "group": "844441360979d51a",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 670,
        "y": 240,
        "wires": []
    },
    {
        "id": "1dbe5bc19a6cfe30",
        "type": "inject",
        "z": "56db586c2f5513cc",
        "g": "c712bb54ba961aa4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "img/dog.jpg",
        "payloadType": "str",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "629194a0d2aaae6b"
            ]
        ]
    },
    {
        "id": "629194a0d2aaae6b",
        "type": "jimp-image",
        "z": "56db586c2f5513cc",
        "g": "c712bb54ba961aa4",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 430,
        "y": 180,
        "wires": [
            [
                "b99be2b53fa0744d"
            ]
        ]
    },
    {
        "id": "950492b94a28dd02",
        "type": "inject",
        "z": "56db586c2f5513cc",
        "g": "c712bb54ba961aa4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "img/house.jpg",
        "payloadType": "str",
        "x": 210,
        "y": 260,
        "wires": [
            [
                "629194a0d2aaae6b"
            ]
        ]
    },
    {
        "id": "15a807c9c75d7d33",
        "type": "inject",
        "z": "56db586c2f5513cc",
        "g": "c712bb54ba961aa4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "img/classroom.jpg",
        "payloadType": "str",
        "x": 190,
        "y": 320,
        "wires": [
            [
                "629194a0d2aaae6b"
            ]
        ]
    },
    {
        "id": "b99be2b53fa0744d",
        "type": "change",
        "z": "56db586c2f5513cc",
        "g": "c712bb54ba961aa4",
        "name": "Set Resize",
        "rules": [
            {
                "t": "set",
                "p": "width",
                "pt": "msg",
                "to": "300",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "height",
                "pt": "msg",
                "to": "-1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 180,
        "wires": [
            [
                "c4acf83621d09278"
            ]
        ]
    },
    {
        "id": "c4acf83621d09278",
        "type": "jimp-image",
        "z": "56db586c2f5513cc",
        "g": "c712bb54ba961aa4",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "buf",
        "parameter1": "width",
        "parameter1Type": "msg",
        "parameter2": "height",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 3,
        "jimpFunction": "resize",
        "selectedJimpFunction": {
            "name": "resize",
            "fn": "resize",
            "description": "resize the image. One of the w or h parameters can be set to automatic (\"Jimp.AUTO\" or -1).",
            "parameters": [
                {
                    "name": "w",
                    "type": "num|auto",
                    "required": true,
                    "hint": "the width to resize the image to (or \"Jimp.AUTO\" or -1)"
                },
                {
                    "name": "h",
                    "type": "num|auto",
                    "required": true,
                    "hint": "the height to resize the image to (or \"Jimp.AUTO\" or -1)"
                },
                {
                    "name": "mode",
                    "type": "resizeMode",
                    "required": false,
                    "hint": "a scaling method (e.g. Jimp.RESIZE_BEZIER)"
                }
            ]
        },
        "x": 810,
        "y": 180,
        "wires": [
            [
                "d0829788800d9db0",
                "5bcd16b70785428a"
            ]
        ]
    },
    {
        "id": "d0829788800d9db0",
        "type": "image viewer",
        "z": "56db586c2f5513cc",
        "g": "c712bb54ba961aa4",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 950,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "dd691b8c1cf7b926",
        "type": "ui_webcam",
        "z": "56db586c2f5513cc",
        "g": "c712bb54ba961aa4",
        "name": "",
        "group": "ce39bb5482ac13ae",
        "order": 1,
        "width": 0,
        "height": 5,
        "countdown": false,
        "autoStart": false,
        "hideCaptureButton": false,
        "showImage": "2",
        "mirror": true,
        "format": "png",
        "x": 540,
        "y": 420,
        "wires": [
            [
                "629194a0d2aaae6b"
            ]
        ]
    },
    {
        "id": "63c83c85f53e59e9",
        "type": "ui_button",
        "z": "56db586c2f5513cc",
        "g": "c712bb54ba961aa4",
        "name": "",
        "group": "ce39bb5482ac13ae",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Capture",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "c1aebcd98785edc3"
            ]
        ]
    },
    {
        "id": "c1aebcd98785edc3",
        "type": "change",
        "z": "56db586c2f5513cc",
        "g": "c712bb54ba961aa4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "capture",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 420,
        "wires": [
            [
                "dd691b8c1cf7b926"
            ]
        ]
    },
    {
        "id": "926cdca585d0eef0",
        "type": "comment",
        "z": "56db586c2f5513cc",
        "g": "c712bb54ba961aa4",
        "name": "Input",
        "info": "",
        "x": 150,
        "y": 100,
        "wires": []
    },
    {
        "id": "5bcd16b70785428a",
        "type": "function",
        "z": "56db586c2f5513cc",
        "name": "Prepare Img Payload",
        "func": "msg.payload = { imageEncoded: Buffer.from(msg.payload).toString(\"base64\") };\nmsg.headers = { \"Content-Type\": \"application/x-www-form-urlencoded\" };\nmsg.url = \"http://localhost:3004/upload_base64\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 580,
        "wires": [
            [
                "24ed44d481eb622d",
                "7cc3a9435155f761"
            ]
        ]
    },
    {
        "id": "24ed44d481eb622d",
        "type": "http request",
        "z": "56db586c2f5513cc",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 170,
        "y": 680,
        "wires": [
            [
                "f4c072735bb4998a",
                "76087066a4f2250c",
                "9e7ea5a564fdb29f",
                "a3782370fc478523"
            ]
        ]
    },
    {
        "id": "f4c072735bb4998a",
        "type": "function",
        "z": "56db586c2f5513cc",
        "name": "Format Text",
        "func": "const obj = JSON.parse(msg.payload);\nlet textOut = \"\";\nfor (const pred of obj.countsArr) {\n    const classStr = pred.class;\n    const count = pred.count;\n    textOut += `👉${classStr} (x${count}) <br/>`;\n}\nif (!textOut) textOut = \"<center><i>No Object Detected</i></center><br/>\";\nconst dt = new Date();\nconst datestring = dt.toLocaleDateString();\nconst timestring = dt.toLocaleTimeString();\ntextOut += `<br/>📆${datestring} ⏰${timestring}`;\nmsg.payload = textOut;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 680,
        "wires": [
            [
                "218721ad78f52e0c"
            ]
        ]
    },
    {
        "id": "218721ad78f52e0c",
        "type": "ui_text",
        "z": "56db586c2f5513cc",
        "group": "ce39bb5482ac13ae",
        "order": 2,
        "width": "6",
        "height": "4",
        "name": "",
        "label": "Object Detection",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 690,
        "y": 660,
        "wires": []
    },
    {
        "id": "76087066a4f2250c",
        "type": "function",
        "z": "56db586c2f5513cc",
        "name": "Load Annotated Image",
        "func": "const obj = JSON.parse(msg.payload);\nconst imageURL = obj.imageURL;\nconst html = `<img width=\"300px\" src=\"${imageURL}\" />`;\nmsg.payload = html;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 760,
        "wires": [
            [
                "0d199835e19ad99b"
            ]
        ]
    },
    {
        "id": "0d199835e19ad99b",
        "type": "ui_template",
        "z": "56db586c2f5513cc",
        "group": "ce39bb5482ac13ae",
        "name": "",
        "order": 3,
        "width": "6",
        "height": "6",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 660,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "9e7ea5a564fdb29f",
        "type": "function",
        "z": "56db586c2f5513cc",
        "d": true,
        "name": "Count Person",
        "func": "// Select class here\nconst selectClass = \"person\";\n// Code\nconst obj = JSON.parse(msg.payload);\nmsg.payload = obj.countsObj?.[selectClass] ?? 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 860,
        "wires": [
            [
                "aa4a4c9270729f7c"
            ]
        ]
    },
    {
        "id": "aa4a4c9270729f7c",
        "type": "debug",
        "z": "56db586c2f5513cc",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 860,
        "wires": []
    },
    {
        "id": "a3782370fc478523",
        "type": "function",
        "z": "56db586c2f5513cc",
        "name": "Count Car",
        "func": "// Select class here\nconst selectClass = \"car\";\n// Code\nconst obj = JSON.parse(msg.payload);\nmsg.payload = obj.countsObj?.[selectClass] ?? 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 940,
        "wires": [
            [
                "aa4a4c9270729f7c"
            ]
        ]
    },
    {
        "id": "7cc3a9435155f761",
        "type": "function",
        "z": "56db586c2f5513cc",
        "name": "Loading",
        "func": "const html = `<center>Loading...</center>`;\nmsg.payload = html;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 580,
        "wires": [
            [
                "218721ad78f52e0c",
                "0d199835e19ad99b"
            ]
        ]
    },
    {
        "id": "895b43eaa531d237",
        "type": "trigger",
        "z": "c9b7fc0892db3842",
        "name": "",
        "op1": "SEND1",
        "op2": "SEND2",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 480,
        "y": 220,
        "wires": [
            [
                "bf7660b1618fccbc"
            ]
        ]
    },
    {
        "id": "3d45fad92058e9f6",
        "type": "inject",
        "z": "c9b7fc0892db3842",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 220,
        "wires": [
            [
                "895b43eaa531d237",
                "44ffd88ea1858ca5"
            ]
        ]
    },
    {
        "id": "bf7660b1618fccbc",
        "type": "debug",
        "z": "c9b7fc0892db3842",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 220,
        "wires": []
    },
    {
        "id": "44ffd88ea1858ca5",
        "type": "delay",
        "z": "c9b7fc0892db3842",
        "d": true,
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 320,
        "wires": [
            [
                "bf7660b1618fccbc"
            ]
        ]
    },
    {
        "id": "072a895474011a9a",
        "type": "inject",
        "z": "c9b7fc0892db3842",
        "name": "",
        "props": [
            {
                "p": "reset",
                "v": "true",
                "vt": "bool"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "895b43eaa531d237"
            ]
        ]
    },
    {
        "id": "90ca45aec0a0d892",
        "type": "switch",
        "z": "44dd633ed7a28d3f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 190,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "9c944228d5b5b7ab",
        "type": "function",
        "z": "44dd633ed7a28d3f",
        "name": "function",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "6cb6553922026714",
        "type": "mqtt in",
        "z": "44dd633ed7a28d3f",
        "name": "",
        "topic": "mqtt in",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9390f05ccaf6c03d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 450,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "1a4f583898ef639a",
        "type": "mqtt out",
        "z": "44dd633ed7a28d3f",
        "name": "",
        "topic": "mqtt out",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9390f05ccaf6c03d",
        "x": 580,
        "y": 100,
        "wires": []
    },
    {
        "id": "11ffcb17247e6660",
        "type": "ui_chart",
        "z": "44dd633ed7a28d3f",
        "name": "",
        "group": "ce39bb5482ac13ae",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 710,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "bc9bfde1d0a8b0fa",
        "type": "ui_text",
        "z": "44dd633ed7a28d3f",
        "group": "ce39bb5482ac13ae",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 830,
        "y": 100,
        "wires": []
    },
    {
        "id": "795f5177618b0b16",
        "type": "Firestore in",
        "z": "44dd633ed7a28d3f",
        "name": "",
        "collection": "",
        "group": false,
        "document": "",
        "realtime": false,
        "query": [],
        "admin": "7bb9ee1340704833",
        "snapHandler": "",
        "eject": false,
        "x": 220,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "95622c98af3512a5",
        "type": "Firestore out",
        "z": "44dd633ed7a28d3f",
        "name": "",
        "collection": "",
        "document": "",
        "operation": "set",
        "admin": "7bb9ee1340704833",
        "eject": false,
        "x": 400,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "0887f23d85985e30",
        "type": "http request",
        "z": "44dd633ed7a28d3f",
        "name": "HTTP Post Request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 600,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "1e51e794acd28d6b",
        "type": "http request",
        "z": "44dd633ed7a28d3f",
        "name": "HTTP GET Request",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 820,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "91bba6b384e43af5",
        "type": "inject",
        "z": "44dd633ed7a28d3f",
        "name": "Inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "47830de74e0cf4f2",
        "type": "inject",
        "z": "e2f563ce6f549df7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "TA",
        "payload": "A",
        "payloadType": "str",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "d0f4e79951f360c4"
            ]
        ]
    },
    {
        "id": "37f44966a5d7b489",
        "type": "inject",
        "z": "e2f563ce6f549df7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "TA",
        "payload": "B",
        "payloadType": "str",
        "x": 190,
        "y": 240,
        "wires": [
            [
                "d0f4e79951f360c4"
            ]
        ]
    },
    {
        "id": "d0f4e79951f360c4",
        "type": "join",
        "z": "e2f563ce6f549df7",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 430,
        "y": 200,
        "wires": [
            [
                "0a7484cf5170f6dc"
            ]
        ]
    },
    {
        "id": "0a7484cf5170f6dc",
        "type": "debug",
        "z": "e2f563ce6f549df7",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 200,
        "wires": []
    }
]
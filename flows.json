[
    {
        "id": "0bda928f5870fe31",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "64ee36542fa458ea",
        "type": "tab",
        "label": "DB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c9db46d895e9f452",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d12b6ff857662b95",
        "type": "tab",
        "label": "ML",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "236bb63f8166146c",
        "type": "tab",
        "label": "MQTT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c87b5ca7fe85273f",
        "type": "tab",
        "label": "Test Context",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c314a73a5e96f198",
        "type": "tab",
        "label": "Context",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0222bdc0e7912998",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0d89bdc714438385",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "6cded3d584342e31",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ee7c47da5878f0a2",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "6cded3d584342e31",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6217fa607d98f662",
        "type": "ui_tab",
        "name": "Control",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c538bc9a9fae688f",
        "type": "ui_group",
        "name": "Button",
        "tab": "6217fa607d98f662",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9390f05ccaf6c03d",
        "type": "mqtt-broker",
        "name": "",
        "broker": "1.tcp.ap.ngrok.io",
        "port": "25580",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "7bb9ee1340704833",
        "type": "firebase admin",
        "name": "Database"
    },
    {
        "id": "cd21216dcf1b107a",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "6cded3d584342e31",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "4a05d9677cfeadd8",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "1.tcp.ap.ngrok.io",
        "port": "25580",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "81942a611e0213fe",
        "type": "ui_tab",
        "name": "Tab 3",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "6b0a127f7637ab3c",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "81942a611e0213fe",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "a6d174fbd907bce2",
        "type": "inject",
        "z": "0bda928f5870fe31",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 280,
        "wires": [
            [
                "c09605badf9e9e97"
            ]
        ]
    },
    {
        "id": "c09605badf9e9e97",
        "type": "function",
        "z": "0bda928f5870fe31",
        "name": "function 1",
        "func": "const timestamp = msg.payload;\nconst period = 10;\nmsg.payload = Math.sin(((timestamp / 1000) * 2 * Math.PI) / period);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 280,
        "wires": [
            [
                "f413f92f42eddb40",
                "5e848e0ebf4f02dd"
            ]
        ]
    },
    {
        "id": "f413f92f42eddb40",
        "type": "ui_chart",
        "z": "0bda928f5870fe31",
        "d": true,
        "name": "",
        "group": "ee7c47da5878f0a2",
        "order": 0,
        "width": "0",
        "height": "0",
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "",
        "dot": false,
        "ymin": "-2",
        "ymax": "10",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#a4ba36",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 630,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "5e848e0ebf4f02dd",
        "type": "ui_gauge",
        "z": "0bda928f5870fe31",
        "d": true,
        "name": "",
        "group": "ee7c47da5878f0a2",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": "-1",
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 630,
        "y": 380,
        "wires": []
    },
    {
        "id": "a3af0880e16ccaf5",
        "type": "comment",
        "z": "0bda928f5870fe31",
        "name": "Display",
        "info": "",
        "x": 190,
        "y": 220,
        "wires": []
    },
    {
        "id": "0f41ac58ce0607b0",
        "type": "comment",
        "z": "0bda928f5870fe31",
        "name": "Control",
        "info": "",
        "x": 170,
        "y": 480,
        "wires": []
    },
    {
        "id": "67ee0443c261fdc8",
        "type": "ui_button",
        "z": "0bda928f5870fe31",
        "name": "",
        "group": "c538bc9a9fae688f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "#16e77e",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 540,
        "wires": [
            [
                "f91b40eee6cc840e"
            ]
        ]
    },
    {
        "id": "b4c57bdedcedef46",
        "type": "ui_button",
        "z": "0bda928f5870fe31",
        "name": "",
        "group": "c538bc9a9fae688f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 600,
        "wires": [
            [
                "f91b40eee6cc840e"
            ]
        ]
    },
    {
        "id": "f91b40eee6cc840e",
        "type": "mqtt out",
        "z": "0bda928f5870fe31",
        "d": true,
        "name": "",
        "topic": "test/dashboard",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9390f05ccaf6c03d",
        "x": 460,
        "y": 560,
        "wires": []
    },
    {
        "id": "3d6c551f7424acee",
        "type": "mqtt in",
        "z": "0bda928f5870fe31",
        "d": true,
        "name": "",
        "topic": "test/dashboard",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9390f05ccaf6c03d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 740,
        "wires": [
            [
                "cc6874f4d0ec30e2"
            ]
        ]
    },
    {
        "id": "cc6874f4d0ec30e2",
        "type": "template",
        "z": "0bda928f5870fe31",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "The system is set to {{payload}} !",
        "output": "str",
        "x": 460,
        "y": 740,
        "wires": [
            [
                "356cea66957517fa"
            ]
        ]
    },
    {
        "id": "356cea66957517fa",
        "type": "ui_text",
        "z": "0bda928f5870fe31",
        "group": "c538bc9a9fae688f",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 630,
        "y": 740,
        "wires": []
    },
    {
        "id": "bf551791e18026b5",
        "type": "function",
        "z": "64ee36542fa458ea",
        "name": "function 2",
        "func": "const timestamp = new Date().getTime();\nconst value = msg.payload;\nmsg.payload = {\n  value: value,\n  timestamp: timestamp,\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 160,
        "wires": [
            [
                "6bf6380cf7af5307"
            ]
        ]
    },
    {
        "id": "6bf6380cf7af5307",
        "type": "Firestore out",
        "z": "64ee36542fa458ea",
        "d": true,
        "name": "",
        "collection": "data",
        "document": "",
        "operation": "add",
        "admin": "7bb9ee1340704833",
        "eject": false,
        "x": 680,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "bc3fc0ee02db3c8d",
        "type": "inject",
        "z": "64ee36542fa458ea",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "num",
        "x": 270,
        "y": 160,
        "wires": [
            [
                "bf551791e18026b5"
            ]
        ]
    },
    {
        "id": "e2b169f0b138d5a7",
        "type": "comment",
        "z": "64ee36542fa458ea",
        "name": "Write to DB",
        "info": "",
        "x": 270,
        "y": 100,
        "wires": []
    },
    {
        "id": "66365a751648fd38",
        "type": "comment",
        "z": "64ee36542fa458ea",
        "name": "Read from DB",
        "info": "",
        "x": 270,
        "y": 240,
        "wires": []
    },
    {
        "id": "3e6ab40be0fedd68",
        "type": "Firestore in",
        "z": "64ee36542fa458ea",
        "d": true,
        "name": "",
        "collection": "data",
        "group": false,
        "document": "",
        "realtime": true,
        "query": [
            {
                "orderBy": {
                    "field": "timestamp",
                    "direction": "desc"
                }
            },
            {
                "limit": 10
            }
        ],
        "admin": "7bb9ee1340704833",
        "snapHandler": "",
        "eject": false,
        "x": 250,
        "y": 320,
        "wires": [
            [
                "f45c9c30d48a1dd2"
            ]
        ]
    },
    {
        "id": "ead9a5a670b999bd",
        "type": "debug",
        "z": "64ee36542fa458ea",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 320,
        "wires": []
    },
    {
        "id": "f45c9c30d48a1dd2",
        "type": "function",
        "z": "64ee36542fa458ea",
        "name": "function 3",
        "func": "let payload = msg.payload;\nlet textOut = \"\";\n\nfor (const [key, value] of Object.entries(payload)) {\n  const _date = value?.timestamp ? new Date(value.timestamp) : new Date();\n  let reading = value.value;\n  if (parseFloat(value.value)) {\n    reading = parseFloat(value.value).toFixed(2);\n  }\n  const datestring = _date.toLocaleDateString();\n  const timestring = _date.toLocaleTimeString();\n  textOut += `📆${datestring} ⏰${timestring} ✏${reading}<br/>`;\n}\n\nmsg.payload = textOut;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 320,
        "wires": [
            [
                "ead9a5a670b999bd",
                "a841c8e27be13dfd"
            ]
        ]
    },
    {
        "id": "a841c8e27be13dfd",
        "type": "ui_text",
        "z": "64ee36542fa458ea",
        "d": true,
        "group": "ee7c47da5878f0a2",
        "order": 2,
        "width": "6",
        "height": "7",
        "name": "",
        "label": "Data from Database",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Courier,monospace",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 400,
        "wires": []
    },
    {
        "id": "b3f862bba84eff0b",
        "type": "inject",
        "z": "c9db46d895e9f452",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "0c0b8eef7ecf68fe",
                "4b8ac092368134bf"
            ]
        ]
    },
    {
        "id": "0c0b8eef7ecf68fe",
        "type": "function",
        "z": "c9db46d895e9f452",
        "d": true,
        "name": "Random Values",
        "func": "// Change here\nconst min_value = 0;\nconst max_value = 100;\n// Don't change below\nconst value = Math.random() * (max_value - min_value) + min_value;\nconst value_rounded = Math.round(value * 100) / 100;\nmsg.payload = value_rounded;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 120,
        "wires": [
            [
                "adf64bce371d2da8"
            ]
        ]
    },
    {
        "id": "adf64bce371d2da8",
        "type": "mqtt out",
        "z": "c9db46d895e9f452",
        "d": true,
        "name": "",
        "topic": "test/fakesensor",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9390f05ccaf6c03d",
        "x": 740,
        "y": 120,
        "wires": []
    },
    {
        "id": "04b02fa18124783e",
        "type": "comment",
        "z": "c9db46d895e9f452",
        "name": "Prototype Sensor",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "51a8b9db54ca629c",
        "type": "mqtt in",
        "z": "c9db46d895e9f452",
        "d": true,
        "name": "",
        "topic": "test/fakesensor",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "9390f05ccaf6c03d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 300,
        "wires": [
            [
                "9275bd1c859a18d4",
                "08c114a0dc9ac6f0"
            ]
        ]
    },
    {
        "id": "9275bd1c859a18d4",
        "type": "debug",
        "z": "c9db46d895e9f452",
        "d": true,
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 300,
        "wires": []
    },
    {
        "id": "08c114a0dc9ac6f0",
        "type": "ui_chart",
        "z": "c9db46d895e9f452",
        "d": true,
        "name": "",
        "group": "cd21216dcf1b107a",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 370,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "4b8ac092368134bf",
        "type": "function",
        "z": "c9db46d895e9f452",
        "name": "function 4",
        "func": "const timestamp = msg.payload;\nconst period = 10;\nmsg.payload = Math.sin(((timestamp / 1000) * 2 * Math.PI) / period);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 200,
        "wires": [
            [
                "adf64bce371d2da8"
            ]
        ]
    },
    {
        "id": "1e5c487d9d8d642f",
        "type": "inject",
        "z": "d12b6ff857662b95",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "img/dog.jpg",
        "payloadType": "str",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "4051e142c181d5b3"
            ]
        ]
    },
    {
        "id": "4051e142c181d5b3",
        "type": "jimp-image",
        "z": "d12b6ff857662b95",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 390,
        "y": 140,
        "wires": [
            [
                "695eb4c9f0a9f8c6",
                "ae5c7d511cb3da96"
            ]
        ]
    },
    {
        "id": "695eb4c9f0a9f8c6",
        "type": "image viewer",
        "z": "d12b6ff857662b95",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 610,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "1a129a0dfb133055",
        "type": "inject",
        "z": "d12b6ff857662b95",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "img/house.jpg",
        "payloadType": "str",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "4051e142c181d5b3"
            ]
        ]
    },
    {
        "id": "ae5c7d511cb3da96",
        "type": "change",
        "z": "d12b6ff857662b95",
        "name": "Set Width",
        "rules": [
            {
                "t": "set",
                "p": "width",
                "pt": "msg",
                "to": "300",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "height",
                "pt": "msg",
                "to": "-1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 280,
        "wires": [
            [
                "9235e736ea5f7138"
            ]
        ]
    },
    {
        "id": "9235e736ea5f7138",
        "type": "jimp-image",
        "z": "d12b6ff857662b95",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "buf",
        "parameter1": "width",
        "parameter1Type": "msg",
        "parameter2": "height",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 3,
        "jimpFunction": "resize",
        "selectedJimpFunction": {
            "name": "resize",
            "fn": "resize",
            "description": "resize the image. One of the w or h parameters can be set to automatic (\"Jimp.AUTO\" or -1).",
            "parameters": [
                {
                    "name": "w",
                    "type": "num|auto",
                    "required": true,
                    "hint": "the width to resize the image to (or \"Jimp.AUTO\" or -1)"
                },
                {
                    "name": "h",
                    "type": "num|auto",
                    "required": true,
                    "hint": "the height to resize the image to (or \"Jimp.AUTO\" or -1)"
                },
                {
                    "name": "mode",
                    "type": "resizeMode",
                    "required": false,
                    "hint": "a scaling method (e.g. Jimp.RESIZE_BEZIER)"
                }
            ]
        },
        "x": 770,
        "y": 280,
        "wires": [
            [
                "47cc5d8f5396a4fd"
            ]
        ]
    },
    {
        "id": "b0b56a3a42d3d6e7",
        "type": "comment",
        "z": "d12b6ff857662b95",
        "name": "Input",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "d1716f1bbe0445c7",
        "type": "comment",
        "z": "d12b6ff857662b95",
        "name": "Process",
        "info": "",
        "x": 140,
        "y": 560,
        "wires": []
    },
    {
        "id": "47cc5d8f5396a4fd",
        "type": "function",
        "z": "d12b6ff857662b95",
        "name": "Prepare Img Payload",
        "func": "msg.payload = { imageEncoded: Buffer.from(msg.payload).toString(\"base64\") };\nmsg.headers = { \"Content-Type\": \"application/x-www-form-urlencoded\" };\nmsg.url = \"http://localhost:3003/upload_base64\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 640,
        "wires": [
            [
                "b0e2b11be060c91f"
            ]
        ]
    },
    {
        "id": "b0e2b11be060c91f",
        "type": "http request",
        "z": "d12b6ff857662b95",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 430,
        "y": 640,
        "wires": [
            [
                "4517a951ce7dacf9",
                "dacecc2b9a2025fa"
            ]
        ]
    },
    {
        "id": "2c2eeb011de46450",
        "type": "debug",
        "z": "d12b6ff857662b95",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 640,
        "wires": []
    },
    {
        "id": "4517a951ce7dacf9",
        "type": "function",
        "z": "d12b6ff857662b95",
        "name": "Extract First Class",
        "func": "const obj = JSON.parse(msg.payload);\nmsg.payload = obj.predictions[0].class;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 640,
        "wires": [
            [
                "2c2eeb011de46450"
            ]
        ]
    },
    {
        "id": "dacecc2b9a2025fa",
        "type": "function",
        "z": "d12b6ff857662b95",
        "name": "Format Text",
        "func": "const obj = JSON.parse(msg.payload);\nlet textOut = \"\";\nfor (const pred of obj.predictions) {\n    const classStr = pred.class;\n    const score = pred.score;\n    const scoreP = (score * 100).toFixed(1);\n    textOut += `👉${classStr} (${scoreP}%) <br/>`;\n}\nconst dt = new Date();\nconst datestring = dt.toLocaleDateString();\nconst timestring = dt.toLocaleTimeString();\ntextOut += `<br/>📆${datestring} ⏰${timestring}`;\nmsg.payload = textOut;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 720,
        "wires": [
            [
                "e8bd9a0de8e17739"
            ]
        ]
    },
    {
        "id": "e8bd9a0de8e17739",
        "type": "ui_text",
        "z": "d12b6ff857662b95",
        "group": "cd21216dcf1b107a",
        "order": 3,
        "width": "6",
        "height": "7",
        "name": "",
        "label": "Prediction",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 860,
        "y": 720,
        "wires": []
    },
    {
        "id": "b64d91982741cfa1",
        "type": "ui_button",
        "z": "d12b6ff857662b95",
        "name": "",
        "group": "cd21216dcf1b107a",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Capture",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "26683e3adb0eecf3"
            ]
        ]
    },
    {
        "id": "26683e3adb0eecf3",
        "type": "change",
        "z": "d12b6ff857662b95",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "capture",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 360,
        "wires": [
            [
                "124dfc23a21e2aca"
            ]
        ]
    },
    {
        "id": "124dfc23a21e2aca",
        "type": "ui_webcam",
        "z": "d12b6ff857662b95",
        "name": "",
        "group": "cd21216dcf1b107a",
        "order": 1,
        "width": 0,
        "height": 5,
        "countdown": false,
        "autoStart": false,
        "hideCaptureButton": false,
        "showImage": "2",
        "mirror": true,
        "format": "png",
        "x": 540,
        "y": 360,
        "wires": [
            [
                "ae5c7d511cb3da96"
            ]
        ]
    },
    {
        "id": "26723656def17c7f",
        "type": "inject",
        "z": "d12b6ff857662b95",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 420,
        "wires": [
            [
                "26683e3adb0eecf3"
            ]
        ]
    },
    {
        "id": "59469e9eeb54d109",
        "type": "mqtt in",
        "z": "236bb63f8166146c",
        "d": true,
        "name": "",
        "topic": "test/main",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4a05d9677cfeadd8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 120,
        "wires": [
            [
                "513a5a00a265f82a"
            ]
        ]
    },
    {
        "id": "513a5a00a265f82a",
        "type": "debug",
        "z": "236bb63f8166146c",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 120,
        "wires": []
    },
    {
        "id": "3b58b44512bcc4ef",
        "type": "mqtt out",
        "z": "236bb63f8166146c",
        "d": true,
        "name": "",
        "topic": "test/main",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4a05d9677cfeadd8",
        "x": 500,
        "y": 260,
        "wires": []
    },
    {
        "id": "e92b192c77f8eec2",
        "type": "inject",
        "z": "236bb63f8166146c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Hi from node-red",
        "payloadType": "str",
        "x": 260,
        "y": 260,
        "wires": [
            [
                "3b58b44512bcc4ef"
            ]
        ]
    },
    {
        "id": "d2726aea3cce7879",
        "type": "inject",
        "z": "c87b5ca7fe85273f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 160,
        "wires": [
            [
                "4a1777f584e85e38"
            ]
        ]
    },
    {
        "id": "4a1777f584e85e38",
        "type": "function",
        "z": "c87b5ca7fe85273f",
        "name": "function 5",
        "func": "const value = flow.get(\"value\") ?? 1;\nmsg.payload = value;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 160,
        "wires": [
            [
                "e15e2c7e1eedfaf3"
            ]
        ]
    },
    {
        "id": "e15e2c7e1eedfaf3",
        "type": "debug",
        "z": "c87b5ca7fe85273f",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 160,
        "wires": []
    },
    {
        "id": "f0fd72273a812047",
        "type": "inject",
        "z": "c314a73a5e96f198",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "5f48c8f6f2147d52"
            ]
        ]
    },
    {
        "id": "5f48c8f6f2147d52",
        "type": "function",
        "z": "c314a73a5e96f198",
        "name": "function 6",
        "func": "msg.payload = Math.random();\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 120,
        "wires": [
            [
                "44dcd7e42975693a",
                "3a9f88b583a3b541",
                "dd5358f016d2c569"
            ]
        ]
    },
    {
        "id": "44dcd7e42975693a",
        "type": "change",
        "z": "c314a73a5e96f198",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "value",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "e62da2d119ea40d2",
        "type": "inject",
        "z": "c314a73a5e96f198",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 340,
        "wires": [
            [
                "c2e874cfb0643d5b"
            ]
        ]
    },
    {
        "id": "d56fba44b2872846",
        "type": "debug",
        "z": "c314a73a5e96f198",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 340,
        "wires": []
    },
    {
        "id": "3a9f88b583a3b541",
        "type": "mqtt out",
        "z": "c314a73a5e96f198",
        "d": true,
        "name": "",
        "topic": "test/value",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4a05d9677cfeadd8",
        "x": 600,
        "y": 60,
        "wires": []
    },
    {
        "id": "470a7ceec879f0a8",
        "type": "mqtt in",
        "z": "c314a73a5e96f198",
        "d": true,
        "name": "",
        "topic": "test/value",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4a05d9677cfeadd8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 260,
        "wires": [
            [
                "d56fba44b2872846"
            ]
        ]
    },
    {
        "id": "dd5358f016d2c569",
        "type": "function",
        "z": "c314a73a5e96f198",
        "name": "function 7",
        "func": "flow.set(\"value\", msg.payload);\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c2e874cfb0643d5b",
        "type": "function",
        "z": "c314a73a5e96f198",
        "name": "function 8",
        "func": "const value = flow.get(\"value\") ?? 0;\nmsg.payload = value;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 380,
        "wires": [
            [
                "d56fba44b2872846"
            ]
        ]
    },
    {
        "id": "7fd24a2bf6613cbb",
        "type": "inject",
        "z": "0222bdc0e7912998",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "87d4c4598cc2e535"
            ]
        ]
    },
    {
        "id": "87d4c4598cc2e535",
        "type": "function",
        "z": "0222bdc0e7912998",
        "name": "function 9",
        "func": "msg.payload = Math.random();\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 140,
        "wires": [
            [
                "2db473b67089a744",
                "8828c9b66fff9b0a",
                "ca1b235909f58c23"
            ]
        ]
    },
    {
        "id": "2db473b67089a744",
        "type": "debug",
        "z": "0222bdc0e7912998",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 160,
        "wires": []
    },
    {
        "id": "8828c9b66fff9b0a",
        "type": "ui_gauge",
        "z": "0222bdc0e7912998",
        "name": "",
        "group": "6b0a127f7637ab3c",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 610,
        "y": 60,
        "wires": []
    },
    {
        "id": "ca1b235909f58c23",
        "type": "switch",
        "z": "0222bdc0e7912998",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0.5",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 280,
        "wires": [
            [
                "1a39b7da7a54f927"
            ]
        ]
    },
    {
        "id": "1a39b7da7a54f927",
        "type": "function",
        "z": "0222bdc0e7912998",
        "name": "function 10",
        "func": "const curCounter = flow.get(\"counter\") ?? 0;\nflow.set(\"counter\", curCounter + 1);\nmsg.payload = curCounter + 1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 280,
        "wires": [
            [
                "d6838861c191b54c"
            ]
        ]
    },
    {
        "id": "d6838861c191b54c",
        "type": "ui_text",
        "z": "0222bdc0e7912998",
        "group": "6b0a127f7637ab3c",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Counter",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 820,
        "y": 240,
        "wires": []
    },
    {
        "id": "50a169cbe84acebc",
        "type": "ui_button",
        "z": "0222bdc0e7912998",
        "name": "",
        "group": "6b0a127f7637ab3c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "8608c9dfa2c7d320",
        "type": "change",
        "z": "0222bdc0e7912998",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 380,
        "wires": [
            []
        ]
    }
]